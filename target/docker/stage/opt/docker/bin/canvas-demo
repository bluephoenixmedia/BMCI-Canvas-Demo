#!/bin/sh

realpath () {
(
  TARGET_FILE="$1"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" = "." -o "$TARGET_FILE" = ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  echo "$(pwd -P)/$TARGET_FILE"
)
}

# Allow user and template_declares (see below) to add java options.
addJava () {
  java_opts="$java_opts $1"
}

# Allow user to specify java options. These get listed first per bash-template.
if [ -n "$JAVA_OPTS" ]
then
  addJava "$JAVA_OPTS"
fi

# Loads a configuration file full of default command line options for this script.
loadConfigFile() {
  cat "$1" | sed '/^\#/d;s/\r$//' | sed 's/^-J-X/-X/' | tr '\r\n' ' '
}

# Detect which JVM we should use.
get_java_cmd() {
  # High-priority override for Jlink images
  if [ -n "$bundled_jvm" ];  then
    echo "$bundled_jvm/bin/java"
  elif [ -n "$JAVA_HOME" ] && [ -x "$JAVA_HOME/bin/java" ];  then
    echo "$JAVA_HOME/bin/java"
  else
    echo "java"
  fi
}

# Processes incoming arguments and places them in appropriate global variables.  called by the run method.
process_args () {
  local no_more_snp_opts=0
  while [[ $# -gt 0 ]]; do
    case "$1" in
             --) shift && no_more_snp_opts=1 && break ;;
       -h|-help) usage; exit 1 ;;
    -v|-verbose) verbose=1 && shift ;;
      -d|-debug) debug=1 && shift ;;

    -no-version-check) no_version_check=1 && shift ;;

           -mem) echo "!! WARNING !! -mem option is ignored. Please use -J-Xmx and -J-Xms" && shift 2 ;;
     -jvm-debug) require_arg port "$1" "$2" && addDebugger $2 && shift 2 ;;

          -main) custom_mainclass="$2" && shift 2 ;;

     -java-home) require_arg path "$1" "$2" && jre=`eval echo $2` && java_cmd="$jre/bin/java" && shift 2 ;;

 -D*|-agentlib*|-XX*) addJava "$1" && shift ;;
                 -J*) addJava "${1:2}" && shift ;;
                   *) addResidual "$1" && shift ;;
    esac
  done

  if [[ no_more_snp_opts ]]; then
    while [[ $# -gt 0 ]]; do
      addResidual "$1" && shift
    done
  fi
}

real_script_path="$(realpath "$0")"
app_home="$(realpath "$(dirname "$real_script_path")")"
lib_dir="$(realpath "${app_home}/../lib")"

app_mainclass=play.core.server.ProdServerStart

script_conf_file="${app_home}/../conf/application.ini"
app_classpath="$lib_dir/../conf/:$lib_dir/com.example.canvas-demo-1.0-SNAPSHOT-sans-externalized.jar:$lib_dir/org.scala-lang.scala-library-2.13.10.jar:$lib_dir/com.typesafe.play.twirl-api_2.13-1.5.1.jar:$lib_dir/com.typesafe.play.play-server_2.13-2.8.19.jar:$lib_dir/com.typesafe.play.play-logback_2.13-2.8.19.jar:$lib_dir/com.typesafe.play.play-akka-http-server_2.13-2.8.19.jar:$lib_dir/com.typesafe.play.filters-helpers_2.13-2.8.19.jar:$lib_dir/com.typesafe.play.play-guice_2.13-2.8.19.jar:$lib_dir/org.scala-lang.modules.scala-xml_2.13-1.2.0.jar:$lib_dir/com.typesafe.play.play_2.13-2.8.19.jar:$lib_dir/ch.qos.logback.logback-classic-1.2.11.jar:$lib_dir/com.typesafe.play.play-streams_2.13-2.8.19.jar:$lib_dir/com.typesafe.akka.akka-http-core_2.13-10.1.15.jar:$lib_dir/com.google.inject.guice-4.2.3.jar:$lib_dir/com.google.inject.extensions.guice-assistedinject-4.2.3.jar:$lib_dir/com.typesafe.play.build-link-2.8.19.jar:$lib_dir/org.slf4j.slf4j-api-1.7.36.jar:$lib_dir/org.slf4j.jul-to-slf4j-1.7.36.jar:$lib_dir/org.slf4j.jcl-over-slf4j-1.7.36.jar:$lib_dir/com.typesafe.akka.akka-actor_2.13-2.6.20.jar:$lib_dir/com.typesafe.akka.akka-actor-typed_2.13-2.6.20.jar:$lib_dir/com.typesafe.akka.akka-slf4j_2.13-2.6.20.jar:$lib_dir/com.typesafe.akka.akka-serialization-jackson_2.13-2.6.20.jar:$lib_dir/com.fasterxml.jackson.core.jackson-core-2.11.4.jar:$lib_dir/com.fasterxml.jackson.core.jackson-annotations-2.11.4.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-jdk8-2.11.4.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-jsr310-2.11.4.jar:$lib_dir/com.fasterxml.jackson.core.jackson-databind-2.11.4.jar:$lib_dir/com.typesafe.play.play-json_2.13-2.8.2.jar:$lib_dir/com.google.guava.guava-30.1.1-jre.jar:$lib_dir/io.jsonwebtoken.jjwt-0.9.1.jar:$lib_dir/jakarta.xml.bind.jakarta.xml.bind-api-2.3.3.jar:$lib_dir/jakarta.transaction.jakarta.transaction-api-1.3.3.jar:$lib_dir/javax.inject.javax.inject-1.jar:$lib_dir/org.scala-lang.modules.scala-java8-compat_2.13-1.0.2.jar:$lib_dir/com.typesafe.ssl-config-core_2.13-0.4.3.jar:$lib_dir/org.scala-lang.modules.scala-parser-combinators_2.13-1.1.2.jar:$lib_dir/ch.qos.logback.logback-core-1.2.11.jar:$lib_dir/org.reactivestreams.reactive-streams-1.0.3.jar:$lib_dir/com.typesafe.akka.akka-stream_2.13-2.6.20.jar:$lib_dir/com.typesafe.akka.akka-parsing_2.13-10.1.15.jar:$lib_dir/aopalliance.aopalliance-1.0.jar:$lib_dir/com.typesafe.play.play-exceptions-2.8.19.jar:$lib_dir/com.typesafe.config-1.4.2.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-parameter-names-2.11.4.jar:$lib_dir/com.fasterxml.jackson.dataformat.jackson-dataformat-cbor-2.11.4.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-scala_2.13-2.11.4.jar:$lib_dir/org.lz4.lz4-java-1.8.0.jar:$lib_dir/com.typesafe.play.play-functional_2.13-2.8.2.jar:$lib_dir/org.scala-lang.scala-reflect-2.13.10.jar:$lib_dir/joda-time.joda-time-2.10.5.jar:$lib_dir/com.google.guava.failureaccess-1.0.1.jar:$lib_dir/com.google.guava.listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$lib_dir/com.google.code.findbugs.jsr305-3.0.2.jar:$lib_dir/org.checkerframework.checker-qual-3.8.0.jar:$lib_dir/com.google.errorprone.error_prone_annotations-2.5.1.jar:$lib_dir/com.google.j2objc.j2objc-annotations-1.3.jar:$lib_dir/jakarta.activation.jakarta.activation-api-1.2.2.jar:$lib_dir/com.typesafe.akka.akka-protobuf-v3_2.13-2.6.20.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-paranamer-2.11.4.jar:$lib_dir/com.thoughtworks.paranamer.paranamer-2.8.jar:$lib_dir/com.example.canvas-demo-1.0-SNAPSHOT-assets.jar"

addJava "-Duser.dir=$(realpath "$(cd "${app_home}/.."; pwd -P)"  $(is_cygwin && echo "fix"))"


process_args "$@"

java_cmd="$(get_java_cmd)"

# If a configuration file exist, read the contents to $opts
[ -f "$script_conf_file" ] && opts=$(loadConfigFile "$script_conf_file")

exec "$java_cmd" $java_opts -classpath $app_classpath $opts $app_mainclass "$@"
